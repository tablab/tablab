datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

model User {
  id       Int      @id @default(autoincrement())
  username String
  email    String
  tabs     Tab[]
  profile  Profile?

  @@unique([username])
}

model Profile {
  id       Int    @id @default(autoincrement())
  location String
  userId   Int
  user     User   @relation(fields: [userId], references: [id], onUpdate: NoAction)
}

model Tab {
  id        Int             @id @default(autoincrement())
  title     String
  artist    ArtistsOnTabs[]
  published Boolean         @default(true)
  content   String
  authorId  Int
  author    User            @relation(fields: [authorId], references: [id], onUpdate: NoAction)
  genres    GenresOnTabs[]
}

model Artist {
  id   Int             @id @default(autoincrement())
  name String
  tabs ArtistsOnTabs[]
}

model Genre {
  id   Int            @id @default(autoincrement())
  name String
  tabs GenresOnTabs[]

  @@unique([name])
}

model GenresOnTabs {
  tab        Tab      @relation(fields: [tabId], references: [id], onUpdate: NoAction)
  tabId      Int
  genre      Genre    @relation(fields: [genreId], references: [id], onUpdate: NoAction)
  genreId    Int
  assignedAt DateTime @default(now())

  @@id([tabId, genreId])
}

model ArtistsOnTabs {
  tab        Tab      @relation(fields: [tabId], references: [id], onUpdate: NoAction)
  tabId      Int
  artist     Artist   @relation(fields: [artistId], references: [id], onUpdate: NoAction)
  artistId   Int
  assignedAt DateTime @default(now())

  @@id([tabId, artistId])
}
